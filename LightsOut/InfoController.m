//
//  InfoController.m
//  LightsOut
//
//  Created by Bart Dority on 2/18/14.
//  Copyright (c) 2014 Bart Dority. All rights reserved.
//

#import "InfoController.h"
#import "helperMethods.h"

@interface InfoController ()

@property UIScrollView *myScroller;

@end

@implementation InfoController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

-(void) goBack
{
        [self performSegueWithIdentifier: @"GameSegue2" sender: self];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    float buttonWidth = self.view.frame.size.width * .07;
    float buttonHeight = self.view.frame.size.height * .05; //40.0;

    
    //NSInteger centerStartingX = (self.view.frame.size.width/2) - (buttonWidth/2);

    
    float killBoxX = self.view.frame.size.width - (buttonWidth * 1.5);
    float killBoxY = 0 + (buttonHeight*.85);
    
    UIButton *button;
    
    
    // Cancel
    button = [helperMethods createAButton: @" X" at:killBoxX and:killBoxY ofWidth: buttonWidth andHeight: buttonHeight];
    
    [button addTarget:self action:@selector(goBack) forControlEvents:UIControlEventTouchUpInside];
    
    [self addScroller];
    
    [self.view addSubview:button];
    
    UIColor *myWhite = [UIColor whiteColor];
    
    float largefontsize = self.view.frame.size.width * .08;
    float myWidth = largefontsize * 10;
    
    CGRect label0Frame = CGRectMake(((self.view.frame.size.width-myWidth)/2) - buttonWidth, killBoxY, myWidth, largefontsize);
    UILabel *label0 = [[UILabel alloc] initWithFrame:label0Frame];
    
    
    UIFont *infoFont = [UIFont boldSystemFontOfSize:largefontsize];
    [label0 setTextAlignment:NSTextAlignmentCenter];
    [label0 setFont:infoFont];
    [label0 setText:@"STARBURST"];
    [label0 setTextColor:myWhite];
    //[label0 setBackgroundColor:myBlack];
    [label0 setNumberOfLines:1];
    
    [self.view addSubview:label0];

}

-(void) addScroller
{
   
    NSString *infoBlock1 = @"The game consists of a grid of lights. When the game starts, a sequence of these lights is switched on. Pressing any of the lights will toggle it and the four adjacent lights.";
    
    NSString *infoBlock1b = @"The goal of the puzzle is to switch all the lights off, preferably in as few button presses as possible.";
    
    NSString *infoRestart = @"This will restart the current game.  Note, it does not re-set your score, or the number of tiles pressed so far.  Those continue from when the game was first started.";
    
    NSString *infoBlock2 = @"You can click on the solution button to see which tiles are part of the solution.  This will display for a few seconds and then disappear.  Each time you use this however, your score will be significantly reduced.";
    
    NSString *infoBlock3 = @"Click on the settings button to change the size and color of the grid.  You can also change the difficulty level of the puzzle by increasing the sequence length.";
    
    NSString *infoBlock4 = @"This is the number of tiles pressed so far.";
    
    NSString *infoBlock5 = @"This is the number of tiles in the puzzle sequence.";
    
    NSString *infoBlock6 = @"You can also use a two-finger rotation to rotate the grid by 90 degrees in either direction.";
    
    NSString *infoBlock7 = @"Strategy:";
    
    NSString *infoBlock8 = @"If a light is on, it must be toggled an odd number of times to be turned off.  If a light is off, it must be toggled an even number of times (including none at all) for it to remain off.  Several conclusions are used for the game's strategy.  Firstly, the order in which the lights are pressed does not matter, as the result will be the same.  Secondly, in a minimal solution, each light needs to be pressed no more than once, because pressing a light twice is equivalent to not pressing it at all.  The gameplay is based on a game called LightsOut, created in the 1970's.";
    
    NSString *infoBlock9 = @"What makes this version different:";
    
    NSString *infoBlock10 = @"This version of the game differs from others that are available in several ways.  The visual appearance adheres to a minimalist design aesthetic.  The puzzles are all generated by a randomly chosen sequence of tiles, so they will always be solvable.  The solution is also always available for a reduction in score.  The number of rows and columns in the grid is changeable, as is the color, and length of the sequence.  These modifications to the game design make this version significantly different, and hopefully more enjoyable than other games that have a similar game-play.";
    
    UIColor *myWhite = [UIColor whiteColor];
    float myWidth = self.view.frame.size.width;
    float myHeight = self.view.frame.size.height;
    
    float myX = 0;
    float myY = self.view.frame.size.height *.12;
    float basicLeft = self.view.frame.size.width *.05;
    float currentY;
    float basicFontSize = self.view.frame.size.width *.04;
    float scalePercentage = myWidth / 500;

    CGRect myFrame = CGRectMake(myX, myY, myWidth, (myHeight*.9)-myY);
    
    _myScroller = [[UIScrollView alloc] initWithFrame:myFrame];
    [_myScroller setContentSize:CGSizeMake(myWidth,myHeight*3.5)];
    
    
    _myScroller.backgroundColor = [[UIColor alloc] initWithRed:0 green:0 blue:0 alpha:1];
    
    // add the text labels and images to the scroller here......
    currentY = 10;
    
    CGRect label1Frame = CGRectMake(basicLeft, currentY, myWidth*.82, basicFontSize*6);
    UILabel *label1 = [[UILabel alloc] initWithFrame:label1Frame];
    
    currentY = currentY + label1.frame.size.height;
    
     UIFont *infoFont = [UIFont systemFontOfSize:basicFontSize];
    UIFont *infoBoldFont = [UIFont boldSystemFontOfSize:basicFontSize];
    
    [label1 setTextAlignment:NSTextAlignmentLeft];
    [label1 setFont:infoFont];
    [label1 setText:infoBlock1];
    [label1 setTextColor:myWhite];
    //[label1 setBackgroundColor:myBlack];
    [label1 setNumberOfLines:6];
    
    [_myScroller addSubview:label1];
    
    //currentY += label1Frame.size.height;
    
    CGRect label1bFrame = CGRectMake(basicLeft,currentY,myWidth*.82,basicFontSize*4);
    UILabel *label1b = [[UILabel alloc] initWithFrame:label1bFrame];
    [label1b setTextAlignment:NSTextAlignmentLeft];
    [label1b setFont:infoBoldFont];
    [label1b setText:infoBlock1b];
    [label1b setTextColor:myWhite];
    [label1b setNumberOfLines:3];
    [_myScroller addSubview:label1b];
    
    currentY += label1bFrame.size.height;
    
    UIImage *info1 = [UIImage imageNamed:@"info1.jpg"];
    CGRect infoRect1 = CGRectMake(basicLeft, currentY, ((500 *scalePercentage)-(basicLeft*2))*.95, (340 * scalePercentage)*.95);
    UIImageView *info1View = [[UIImageView alloc] initWithFrame:infoRect1];
    [info1View setImage:info1];
    [_myScroller addSubview:info1View];
    
    currentY = currentY + infoRect1.size.height;
    
    UIImage *infoRestartImage = [UIImage imageNamed:@"info_restart.jpg"];
    CGRect infoRectRestart = CGRectMake(basicLeft, currentY, 69, 69);
    UIImageView *infoRestartView = [[UIImageView alloc] initWithFrame:infoRectRestart];
    [infoRestartView setImage:infoRestartImage];
    [_myScroller addSubview:infoRestartView];
    
    CGRect labelRestartFrame = CGRectMake(basicLeft + 80, currentY-10, (myWidth*.9) - basicLeft - 80, basicFontSize*8);
    UILabel *labelRestart = [[UILabel alloc] initWithFrame:labelRestartFrame];
    [labelRestart setTextAlignment:NSTextAlignmentLeft];
    [labelRestart setFont:infoFont];
    [labelRestart setText:infoRestart];
    [labelRestart setTextColor:myWhite];
    [labelRestart setNumberOfLines:8];
    [_myScroller addSubview:labelRestart];
    
    currentY += labelRestart.frame.size.height + (basicFontSize/2);
    
    
    
    UIImage *info2 = [UIImage imageNamed:@"info2.jpg"];
    CGRect infoRect2 = CGRectMake(basicLeft, currentY, 69, 69);
    UIImageView *info2View = [[UIImageView alloc] initWithFrame:infoRect2];
    [info2View setImage:info2];
    
    CGRect label2Frame = CGRectMake(basicLeft + 80, currentY-10, (myWidth*.9) - basicLeft - 80, basicFontSize*9);
    UILabel *label2 = [[UILabel alloc] initWithFrame:label2Frame];
    [label2 setTextAlignment:NSTextAlignmentLeft];
    [label2 setFont:infoFont];
    [label2 setText:infoBlock2];
    [label2 setTextColor:myWhite];
    [label2 setNumberOfLines:8];
    
    [_myScroller addSubview:info2View];
    [_myScroller addSubview:label2];
    
    currentY = currentY + label2.frame.size.height + basicFontSize;
    UIImage *info3 = [UIImage imageNamed:@"info3.jpg"];
    CGRect infoRect3 = CGRectMake(basicLeft, currentY, 69, 69);
    UIImageView *info3View = [[UIImageView alloc] initWithFrame:infoRect3];
    [info3View setImage:info3];
    [_myScroller addSubview:info3View];
    
    CGRect label3Frame = CGRectMake(80+basicLeft, currentY-10, (myWidth*.9) - basicLeft - 80, basicFontSize*6);
    UILabel *label3 = [[UILabel alloc] initWithFrame:label3Frame];
    [label3 setTextAlignment:NSTextAlignmentLeft];
    [label3 setFont:infoFont];
    [label3 setText:infoBlock3];
    [label3 setTextColor:myWhite];
    [label3 setNumberOfLines:6];
    [_myScroller addSubview:label3];
    currentY = currentY + label3.frame.size.height + basicFontSize;
    
    UIImage *info4 = [UIImage imageNamed:@"info4.jpg"];
    CGRect infoRect4 = CGRectMake(basicLeft, currentY, 250, 118);
    UIImageView *info4View = [[UIImageView alloc] initWithFrame:infoRect4];
    [info4View setImage:info4];
    [_myScroller addSubview:info4View];
    currentY += info4View.frame.size.height;
    
    CGRect label4Frame = CGRectMake(basicLeft, currentY, (myWidth*.45) - basicLeft, basicFontSize*3);
    UILabel *label4 = [[UILabel alloc] initWithFrame:label4Frame];
    [label4 setTextAlignment:NSTextAlignmentLeft];
    [label4 setFont:infoFont];
    [label4 setText:infoBlock4];
    [label4 setTextColor:myWhite];
    [label4 setNumberOfLines:3];
    [_myScroller addSubview:label4];
    
    CGRect label5Frame = CGRectMake(myWidth*.5, currentY, (myWidth*.45)-basicLeft, basicFontSize*4);
    UILabel *label5 = [[UILabel alloc] initWithFrame:label5Frame];
    [label5 setTextAlignment:NSTextAlignmentRight];
    [label5 setFont:infoFont];
    [label5 setText:infoBlock5];
    [label5 setTextColor:myWhite];
    [label5 setNumberOfLines:4];
    [_myScroller addSubview:label5];
    currentY += label5.frame.size.height + basicFontSize;
    
    UIImage *info5 = [UIImage imageNamed:@"info5.jpg"];
    CGRect infoRect5 = CGRectMake(basicLeft, currentY, 250, 174);
    UIImageView *info5View = [[UIImageView alloc] initWithFrame:infoRect5];
    [info5View setImage:info5];
    [_myScroller addSubview:info5View];
    currentY += info5View.frame.size.height;
    
    CGRect label6Frame = CGRectMake(basicLeft, currentY, (myWidth*.9)-basicLeft, basicFontSize*4);
    UILabel *label6 = [[UILabel alloc] initWithFrame:label6Frame];
    [label6 setTextAlignment:NSTextAlignmentLeft];
    [label6 setFont:infoFont];
    [label6 setText:infoBlock6];
    [label6 setTextColor:myWhite];
    [label6 setNumberOfLines:4];
    [_myScroller addSubview:label6];
    currentY += label6.frame.size.height + basicFontSize;
    
    CGRect label7Frame = CGRectMake(basicLeft, currentY, (myWidth*.9)-basicLeft, basicFontSize*1.5);
    UILabel *label7 = [[UILabel alloc] initWithFrame:label7Frame];
    [label7 setTextAlignment:NSTextAlignmentLeft];
    [label7 setFont:infoBoldFont];
    [label7 setText:infoBlock7];
    [label7 setTextColor:myWhite];
    [label7 setNumberOfLines:1];
    [_myScroller addSubview:label7];
    currentY += label7.frame.size.height;
    
    CGRect label8Frame = CGRectMake(basicLeft, currentY, (myWidth*.9)-basicLeft, basicFontSize*16);
    UILabel *label8 = [[UILabel alloc] initWithFrame:label8Frame];
    [label8 setTextAlignment:NSTextAlignmentLeft];
    [label8 setFont:infoFont];
    [label8 setText:infoBlock8];
    [label8 setTextColor:myWhite];
    [label8 setNumberOfLines:16];
    [_myScroller addSubview:label8];
    currentY += label8.frame.size.height + basicFontSize;
    
    CGRect label9Frame = CGRectMake(basicLeft, currentY, (myWidth*.9)-basicLeft, basicFontSize*1.5);
    UILabel *label9 = [[UILabel alloc] initWithFrame:label9Frame];
    [label9 setTextAlignment:NSTextAlignmentLeft];
    [label9 setFont:infoBoldFont];
    [label9 setText:infoBlock9];
    [label9 setTextColor:myWhite];
    [label9 setNumberOfLines:1];
    [_myScroller addSubview:label9];
    currentY += label9.frame.size.height;
    
    CGRect label10Frame = CGRectMake(basicLeft, currentY, (myWidth*.9)-basicLeft, basicFontSize*16);
    UILabel *label10 = [[UILabel alloc] initWithFrame:label10Frame];
    [label10 setTextAlignment:NSTextAlignmentLeft];
    [label10 setFont:infoFont];
    [label10 setText:infoBlock10];
    [label10 setTextColor:myWhite];
    [label10 setNumberOfLines:16];
    [_myScroller addSubview:label10];
    currentY += label10.frame.size.height + basicFontSize;
    
    [_myScroller setScrollEnabled:TRUE];
    [_myScroller setShowsVerticalScrollIndicator:TRUE];
    
    [self.view addSubview:_myScroller];

    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
